{"version":3,"sources":["SanityContext.jsx","Components/Recipe/Ingredients/Ingredient.jsx","Components/Recipe/Ingredients/Ingredients.jsx","Components/Recipe/Instructions/Instruction.jsx","Components/Recipe/Instructions/Instructions.jsx","Components/Recipe/Description.jsx","Components/Recipe/Title.jsx","Components/Styling/InfoBox.jsx","Components/Styling/StyledComponents.jsx","Components/Recipe/Specs/Cooktime.jsx","Components/Recipe/Specs/Temperature.jsx","Components/Recipe/Specs/Oven.jsx","Components/Recipe/Specs/Pan.jsx","Components/Recipe/Specs/Specifications.jsx","Components/Recipe/Recipe.jsx","Components/Styling/AccordianBox.jsx","Components/Recipe/RecipeListItems.jsx","Components/Recipe/RecipeList.jsx","Components/Navbar.jsx","Components/Footer.jsx","Components/Styling/PageBox.jsx","Components/About.jsx","Components/Page.jsx","Components/Styling/style.js","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","client","SanityContext","createContext","SanityProvider","props","children","useState","state","setState","useEffect","sanityClient","projectId","dataset","apiVersion","token","useCdn","prevState","Provider","value","useSanityContext","useContext","Ingredient","ingredientForRecipe","idiot","ingredient","convert","unit","amount","templateColumns","gap","textStyle","align","name","amountInCups","cupInGrams","cupconverter","amountInGrams","calcAmount","toFixed","convertToCups","Ingredients","ingredients","saved","localStorage","getItem","JSON","parse","setIdiot","display","justifyContent","alignItems","fontSize","paddingInline","textColor","isChecked","onChange","event","checked","target","setItem","toString","size","orientation","borderColor","color","borderBottomWidth","map","index","Instruction","instruction","spacing","p","Instructions","instructions","paddingBottom","_id","Description","description","maxw","marginLeft","Title","title","InfoBox","colSpan","base","sm","layerStyle","InfoBoxFull","InfoBoxHead","InfoBoxSpecs","StyledIcon","icon","as","mr","justify","w","h","Cooktime","cooktime","GiSandsOfTime","Temperature","temperature","GiHeatHaze","Oven","oven","GiAbstract055","Pan","pan","GiResize","wrap","shape","Specifications","flexFlow","Recipe","recipes","recipeSlug","useParams","recipe","find","recipeItem","slug","current","direction","maxW","m","templateRows","AccordionBox","_hover","width","AccorordianLink","RecipeListItems","recipeList","category","filter","to","RecipeList","categories","Set","allowToggle","isFocusable","pb","Navbar","borderBottom","GiCupcake","Footer","fontWeight","PageText","PageH1","paddingTop","PageH2","About","data","setData","pageQuery","fetch","then","catch","error","console","length","intro","body","Page","recipeQuery","path","element","style","padding","theme","extendTheme","colors","dgray","dteal","mteal","lteal","yellow","lpink","mpink","dpink","black","textStyles","h1_icon","md","lg","lineHeight","letterSpacing","h1","h2","h3","body_list","shadows","pink","teal","layerStyles","pinkShadow","bg","border","boxShadow","blueShadow","linkShadow","components","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1d71b07.chunk.js","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport sanityClient from \"@sanity/client\";\n\nconst initialState = { client: {} };\n\nconst SanityContext = createContext(initialState);\n\nexport const SanityProvider = (props) => {\n  const { children } = props;\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    const client = sanityClient({\n      projectId: \"33hgh7pg\",\n      dataset: \"production\",\n      apiVersion: \"2021-09-22\", // uses current UTC date - see \"specifying API version\"!\n      token:\n        \"skzxVNKl3yIsLZ83VFe4KgxoAkxpVOlOJSaDLhzcKKLhXYNHTdFF7oYcOfoqZ3vlX9fjSxy6dhj0e3wpvXSrfBnFcODSbVxCz5pU1VNXgFA13Zozq2VA3hj9dQfwWJgVKaCkdHM1CojuUIMXLWkDmkmA0iRMxQtyRxFOObFX3ZltPlN3PoMh\",\n      useCdn: true, // `false` if you want to ensure fresh data\n    });\n\n    setState((prevState) => ({ ...prevState, client }));\n  }, []);\n  return (\n    <SanityContext.Provider value={state}>{children}</SanityContext.Provider>\n  );\n};\n\nexport const useSanityContext = () => {\n  const context = useContext(SanityContext);\n\n  return context;\n};\n","import { Grid, GridItem } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst Ingredient = (props) => {\n  const { ingredientForRecipe, idiot } = props;\n\n  if (!ingredientForRecipe.ingredient) {\n    return null;\n  }\n\n  const { unit, amount } = convert(ingredientForRecipe, idiot);\n\n  return (\n    <Grid templateColumns=\"1fr 1fr 60%\" gap={1} textStyle=\"body_list\">\n      <GridItem align=\"right\">{amount}</GridItem>\n      <GridItem>{unit}</GridItem>\n      <GridItem>{ingredientForRecipe.ingredient.name} </GridItem>\n    </Grid>\n  );\n};\n\nexport default Ingredient;\n\nconst convertToGrams = (amountInCups, cupInGrams) => {\n  if (amountInCups != null) {\n    return amountInCups * cupInGrams;\n  }\n  return amountInCups;\n};\n\nconst convertToCups = (amountInGrams, cupInGrams) => {\n  if (amountInGrams != null) {\n    let calcAmount = amountInGrams / cupInGrams;\n    calcAmount = calcAmount.toFixed(1);\n    return calcAmount;\n  }\n  return amountInGrams;\n};\n\nconst convert = (ingredientForRecipe, idiot) => {\n  let unit = ingredientForRecipe.unit;\n  let amount = ingredientForRecipe.amount;\n  let cupconverter = ingredientForRecipe.ingredient.cupconverter;\n\n  if (unit === \"gram\" && idiot && cupconverter != null) {\n    unit = \"cup\";\n    amount = convertToCups(amount, cupconverter);\n  }\n\n  if (unit === \"cup\" && !idiot && cupconverter != null) {\n    unit = \"gram\";\n    amount = convertToGrams(amount, cupconverter);\n  }\n  return { unit, amount };\n};\n\n// const convertIfCup = (ingredientForRecipe, idiot) => {\n//   let unit = ingredientForRecipe.unit;\n//   let amount = ingredientForRecipe.amount;\n\n//   if (idiot) {\n//     //konfertil til cups\n//   }\n\n//   if (\n//     ingredientForRecipe.unit === \"cup\" &&\n//     ingredientForRecipe.ingredient.cupconverter != null\n//   ) {\n//     unit = \"gram\";\n//     amount = convertToGrams(\n//       amount,\n//       ingredientForRecipe.ingredient.cupconverter\n//     );\n//   }\n//   return { unit, amount };\n// };\n","import React from \"react\";\nimport Ingredient from \"./Ingredient\";\nimport { Box, Divider, FormLabel, Text } from \"@chakra-ui/react\";\nimport { Switch } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nconst Ingredients = (props) => {\n  const { ingredients } = props;\n  const [idiot, setIdiot] = useState(() => {\n    const saved = localStorage.getItem(\"idiot\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || false;\n  });\n\n  if (!ingredients) {\n    return null;\n  }\n  const handleToggle = (checked) => {\n    setIdiot(checked);\n    localStorage.setItem(\"idiot\", checked.toString());\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Text textStyle=\"h3\">Ingredienser:</Text>\n\n        <FormLabel display=\"flex\" alignItems=\"center\">\n          <Text fontSize=\"xs\" paddingInline=\"2\" textColor=\"dpink\">\n            Vanlig\n          </Text>\n          <Switch\n            isChecked={idiot}\n            onChange={(event) => handleToggle(event.target.checked)}\n            size=\"sm\"\n          />\n          <Text fontSize=\"xs\" paddingInline=\"2\" textColor=\"dpink\">\n            Idiot\n          </Text>\n        </FormLabel>\n      </Box>\n\n      <Divider\n        orientation=\"horizontal\"\n        borderColor=\"yellow\"\n        color=\"yellow\"\n        borderBottomWidth=\"2px\"\n      />\n\n      {ingredients.map((ingredientForRecipe, index) => (\n        <Ingredient\n          key={`${ingredientForRecipe.ingredient}-${index}`}\n          ingredientForRecipe={ingredientForRecipe}\n          idiot={idiot}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default Ingredients;\n","import React from \"react\";\nimport { Flex, Box } from \"@chakra-ui/layout\";\n\nconst Instruction = (props) => {\n  const { instruction } = props;\n\n  if (!instruction) {\n    return null;\n  }\n\n  return (\n    <Flex spacing=\"10px\">\n      <Box p=\"1\" textStyle=\"body\">\n        {instruction.name}\n      </Box>\n    </Flex>\n  );\n};\nexport default Instruction;\n","import React from \"react\";\nimport Instruction from \"./Instruction\";\nimport { Box, Text, Divider } from \"@chakra-ui/react\";\n\nconst Instructions = (props) => {\n  const { instructions } = props;\n\n  if (!instructions) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box>\n        <Text textStyle=\"h3\"> Instruksjoner:</Text>\n        <Divider\n          orientation=\"horizontal\"\n          p={1}\n          borderColor=\"yellow\"\n          borderBottomWidth=\"2px\"\n          paddingBottom=\"2\"\n        />\n\n        {instructions.map((instruction) => (\n          <Instruction key={instruction._id} instruction={instruction} />\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\nimport { Container } from \"@chakra-ui/layout\";\n\nconst Description = (props) => {\n  const { description } = props;\n\n  if (!description) {\n    return null;\n  }\n\n  return (\n    <Container maxw=\"container.lg\" p={0} marginLeft=\"0\">\n      {\" \"}\n      {description}\n    </Container>\n  );\n};\n\nexport default Description;\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nconst Title = (props) => {\n  const { title } = props;\n\n  return <Text textStyle=\"h2\"> {title}</Text>;\n};\n\nexport default Title;\n","import React from \"react\";\nimport { Flex, GridItem } from \"@chakra-ui/react\";\n\nconst InfoBox = (props) => {\n  const { children } = props;\n\n  return (\n    <GridItem colSpan={{ base: 6, sm: 3 }} p={5} layerStyle=\"pinkShadow\">\n      {children}\n    </GridItem>\n  );\n};\n\nexport default InfoBox;\n\nexport const InfoBoxFull = (props) => {\n  const { children } = props;\n\n  return (\n    <GridItem colSpan={6} p={5} layerStyle=\"pinkShadow\">\n      {children}\n    </GridItem>\n  );\n};\n\nexport const InfoBoxHead = (props) => {\n  const { children } = props;\n\n  return (\n    <GridItem colSpan={6} p={5} layerStyle=\"blueShadow\">\n      {children}\n    </GridItem>\n  );\n};\n\nexport const InfoBoxSpecs = (props) => {\n  const { children } = props;\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" textStyle=\"body\" p={2}>\n      {children}\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Icon } from \"@chakra-ui/react\";\n\nconst StyledIcon = (props) => {\n  const { icon } = props;\n  return (\n    <Icon as={icon} mr=\"10\" justify=\"space-around\" color=\"dpink\" w=\"8\" h=\"8\" />\n  );\n};\n\nexport default StyledIcon;\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\nimport { GiSandsOfTime } from \"react-icons/gi\";\nimport { InfoBoxSpecs } from \"../../Styling/InfoBox\";\nimport StyledIcon from \"../../Styling/StyledComponents\";\n\nconst Cooktime = (props) => {\n  const { cooktime } = props;\n\n  if (!cooktime) {\n    return null;\n  }\n\n  return (\n    <InfoBoxSpecs>\n      <StyledIcon icon={GiSandsOfTime} />\n      <Text> Tid i ovn: </Text>\n      <Text> {cooktime} minutter</Text>\n    </InfoBoxSpecs>\n  );\n};\n\nexport default Cooktime;\n","import React from \"react\";\nimport { Flex, Text } from \"@chakra-ui/react\";\nimport { GiHeatHaze } from \"react-icons/gi\";\nimport { InfoBoxSpecs } from \"../../Styling/InfoBox\";\nimport StyledIcon from \"../../Styling/StyledComponents\";\n\nconst Temperature = (props) => {\n  const { temperature } = props;\n\n  if (!temperature) {\n    return null;\n  }\n\n  return (\n    <InfoBoxSpecs>\n      <StyledIcon icon={GiHeatHaze} />\n      <Flex justify=\"row\">\n        <Text>Tempratur: </Text>\n        <Text>\n          {temperature?.value} {temperature?.unit}\n        </Text>\n      </Flex>\n    </InfoBoxSpecs>\n  );\n};\n\nexport default Temperature;\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\nimport { GiAbstract055 } from \"react-icons/gi\";\nimport { InfoBoxSpecs } from \"../../Styling/InfoBox\";\nimport StyledIcon from \"../../Styling/StyledComponents\";\n\nconst Oven = (props) => {\n  const { oven } = props;\n\n  if (!oven) {\n    return null;\n  }\n\n  return (\n    <InfoBoxSpecs>\n      <StyledIcon icon={GiAbstract055} />\n      <Text>Type ovn: {oven} </Text>\n    </InfoBoxSpecs>\n  );\n};\n\nexport default Oven;\n","import React from \"react\";\nimport { Text, Flex } from \"@chakra-ui/react\";\nimport { GiResize } from \"react-icons/gi\";\nimport { InfoBoxSpecs } from \"../../Styling/InfoBox\";\nimport StyledIcon from \"../../Styling/StyledComponents\";\n\nconst Pan = (props) => {\n  const { pan } = props;\n\n  if (!pan) {\n    return null;\n  }\n\n  return (\n    <InfoBoxSpecs>\n      <StyledIcon icon={GiResize} />\n      <Flex justify=\"row\" align=\"center\" wrap=\"wrap\">\n        <Text> {pan.shape} </Text>\n      </Flex>\n    </InfoBoxSpecs>\n  );\n};\n\nexport default Pan;\n","import React from \"react\";\nimport { Divider, Flex, Text } from \"@chakra-ui/react\";\nimport Cooktime from \"./Cooktime\";\nimport Temperature from \"./Temperature\";\nimport Oven from \"./Oven\";\nimport Pan from \"./Pan\";\n\nconst Specifications = (props) => {\n  const { cooktime, temperature, pan, oven } = props;\n\n  return (\n    <Flex justifyContent=\"center\" flexFlow=\"column wrap\">\n      <Text textStyle=\"h3\">Spesifikasjoner:</Text>\n      <Divider\n        orientation=\"horizontal\"\n        borderColor=\"yellow\"\n        color=\"yellow\"\n        borderBottomWidth=\"2px\"\n        paddingBottom=\"2\"\n      />\n\n      <Cooktime cooktime={cooktime} />\n      <Temperature temperature={temperature} />\n      <Oven oven={oven} />\n      <Pan pan={pan} />\n    </Flex>\n  );\n};\n\nexport default Specifications;\n","import React from \"react\";\nimport Ingredients from \"./Ingredients/Ingredients\";\nimport Instructions from \"./Instructions/Instructions\";\nimport Description from \"./Description\";\nimport Title from \"./Title\";\nimport { Container, Box, Grid, Flex } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\nimport Specifications from \"./Specs/Specifications\";\nimport InfoBox, { InfoBoxFull, InfoBoxHead } from \"../Styling/InfoBox\";\n\nconst Recipe = (props) => {\n  const { recipes } = props;\n  const { recipeSlug } = useParams();\n\n  const recipe = recipes.find(\n    (recipeItem) => recipeItem.slug && recipeItem.slug.current === recipeSlug\n  );\n\n  if (!recipes) {\n    return null;\n  }\n\n  return (\n    <Flex direction=\"column\" align=\"center\">\n      <Container maxW=\"3xl\">\n        <Grid\n          m={4}\n          templateRows=\"repeat(3)\"\n          templateColumns=\"repeat(6, 1fr)\"\n          gap={4}\n        >\n          <InfoBoxHead>\n            <Box>\n              <Title title={recipe.name} />\n              <Description description={recipe.description} />\n            </Box>\n          </InfoBoxHead>\n\n          <InfoBox>\n            <Ingredients ingredients={recipe.ingredients} />\n          </InfoBox>\n\n          <InfoBox>\n            <Specifications\n              cooktime={recipe.cooktime}\n              pan={recipe.pan}\n              temperature={recipe.temperature}\n              oven={recipe.oven}\n            />\n          </InfoBox>\n\n          <InfoBoxFull>\n            <Instructions instructions={recipe.instructions} />\n          </InfoBoxFull>\n        </Grid>\n      </Container>\n    </Flex>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst AccordionBox = (props) => {\n  const { children } = props;\n\n  return (\n    <Box\n      _hover={{ layerStyle: \"blueShadow\" }}\n      p={5}\n      width=\"100%\"\n      layerStyle=\"pinkShadow\"\n      textStyle=\"h2\"\n    >\n      {children}\n    </Box>\n  );\n};\nexport default AccordionBox;\n\nexport const AccorordianLink = (props) => {\n  const { children } = props;\n\n  return (\n    <Box\n      _hover={{ layerStyle: \"linkShadow\" }}\n      p={5}\n      width=\"100%\"\n      textStyle=\"h3\"\n      alignItems=\"center\"\n    >\n      {children}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { AccorordianLink } from \"../Styling/AccordianBox\";\nimport { Link } from \"react-router-dom\";\n\nconst RecipeListItems = (props) => {\n  const { recipeList, category } = props;\n\n  return (\n    <>\n      {recipeList\n        .filter((recipe) => recipe.category === category)\n        .map((recipe, index) => {\n          if (!recipe.slug) {\n            return (\n              <AccorordianLink key={`${recipe._id}-${index}`}>\n                {recipe.name}\n              </AccorordianLink>\n            );\n          }\n          return (\n            <Link key={`${recipe._id}-${index}`} to={`/${recipe.slug.current}`}>\n              <AccorordianLink> {recipe.name}</AccorordianLink>\n            </Link>\n          );\n        })}\n    </>\n  );\n};\n\nexport default RecipeListItems;\n","import React from \"react\";\nimport { Container } from \"@chakra-ui/layout\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n} from \"@chakra-ui/react\";\nimport AccordionBox from \"../Styling/AccordianBox\";\nimport RecipeListItems from \"./RecipeListItems\";\n\nconst RecipeList = (props) => {\n  const { recipeList } = props;\n\n  if (!recipeList) {\n    return null;\n  }\n  const categories = [...new Set(recipeList.map((recipe) => recipe.category))];\n\n  return (\n    <>\n      <Container maxW=\"container.md\" p={10}>\n        <Container maxW=\"container.md\" p={10}>\n          Velkommen til min bakebok! En samling med mine beste oppskirfter på en\n          fornuftig og reklamefri side.\n        </Container>\n\n        <Accordion allowToggle>\n          {categories.map((category) => (\n            <AccordionItem\n              key={category}\n              borderColor=\"white\"\n              isFocusable=\"false\"\n            >\n              <AccordionButton>\n                <AccordionBox>\n                  {category ? category : \"Annet\"}\n                  <AccordionIcon />\n                </AccordionBox>\n              </AccordionButton>\n\n              <AccordionPanel pb={4}>\n                <RecipeListItems recipeList={recipeList} category={category} />\n              </AccordionPanel>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </Container>\n    </>\n  );\n};\n\nexport default RecipeList;\n","import React from \"react\";\nimport { Flex, Icon, Text, Divider } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { GiCupcake } from \"react-icons/gi\";\n\nconst Navbar = () => {\n  return (\n    <Link to=\"/\">\n      <Flex\n        w=\"100%\"\n        p={2}\n        alignItems=\"center\"\n        color=\"white\"\n        justifyContent=\"center\"\n        borderBottom=\"2px solid #006D77\"\n      >\n        <Icon as={GiCupcake} w={8} h={8} m={4} color=\"mteal\" />\n        <Text textStyle=\"h1\" color=\"dteal\">\n          Bakeboka\n        </Text>\n      </Flex>\n      <Divider\n        orientation=\"horizontal\"\n        p={0.5}\n        borderColor=\"mpink\"\n        color=\"mpink\"\n        borderBottomWidth=\"2px\"\n      />\n    </Link>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Flex, Text, Divider } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <Flex direction=\"column\" align=\"center\" p={10}>\n      <Divider\n        orientation=\"horizontal\"\n        p={0.5}\n        color=\"mpink\"\n        borderBottomWidth=\"1px\"\n      />\n      <Flex direction=\"row\" align=\"center\" p={10}>\n        <Link to=\"/\">\n          <Text textStyle=\"body_list\" fontWeight=\"bold\" color=\"mteal\" p={5}>\n            Tilbake til bakebok her\n          </Text>\n        </Link>\n\n        <Text textStyle=\"body_list\" color=\"mteal\" p={5}>\n          av Madeleine Lorås, 2022\n        </Text>\n\n        <Link to=\"/about\">\n          <Text textStyle=\"body_list\" fontWeight=\"bold\" color=\"mteal\" p={5}>\n            Mer om bakeboka her\n          </Text>\n        </Link>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nconst PageText = (props) => {\n  const { children } = props;\n\n  return (\n    <Text fontSize=\"14px\" paddingBottom=\"4\">\n      {children}\n    </Text>\n  );\n};\n\nexport default PageText;\n\nexport const PageH1 = (props) => {\n  const { children } = props;\n\n  return (\n    <Text fontSize=\"25px\" fontWeight=\"bold\" paddingTop=\"10\" paddingBottom=\"5\">\n      {children}\n    </Text>\n  );\n};\n\nexport const PageH2 = (props) => {\n  const { children } = props;\n\n  return (\n    <Text fontSize=\"16px\" fontWeight=\"semibold\" paddingBottom={5}>\n      {children}\n    </Text>\n  );\n};\n","import React from \"react\";\nimport { Flex, Spinner, Container } from \"@chakra-ui/react\";\nimport { useSanityContext } from \"../SanityContext\";\nimport { useState, useEffect } from \"react\";\nimport { PageH1, PageH2 } from \"./Styling/PageBox\";\nimport PageText from \"./Styling/PageBox\";\n\nconst About = () => {\n  const { client } = useSanityContext();\n  const [data, setData] = useState([]);\n\n  const pageQuery = `\n  *[ _type == \"page\" ]{\n    title, intro, body, image,\n  }\n  `;\n  useEffect(() => {\n    if (client.fetch) {\n      client\n        .fetch(pageQuery)\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }, [client, setData, pageQuery]);\n\n  if (!data.length) {\n    return <Spinner m=\"10\" p=\"4\" color=\"teal\" />;\n  }\n\n  return (\n    <Container width=\"3xl\">\n      <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n        <PageH1>{data[0].title}</PageH1>\n        <PageH2> {data[0].intro}</PageH2>\n        <PageText> {data[0].body}</PageText>\n      </Flex>\n    </Container>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { useSanityContext } from \"../SanityContext\";\nimport { useState, useEffect } from \"react\";\nimport Recipe from \"./Recipe/Recipe\";\nimport RecipeList from \"./Recipe/RecipeList\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport { Box, Spinner } from \"@chakra-ui/react\";\nimport Footer from \"./Footer\";\nimport About from \"./About\";\n\nconst Page = () => {\n  const { client } = useSanityContext();\n  const [data, setData] = useState([]);\n\n  const recipeQuery = `\n  *[ _type == \"recipe\"] | order(name){\n    name, description, cooktime, oven, temperature, pan, category, slug, \n    instructions[]-> {_id, name},\n    ingredients[]{amount, unit, ingredient-> {name, cupconverter, _id}},\n  }\n  `;\n\n  useEffect(() => {\n    if (client.fetch) {\n      client\n        .fetch(recipeQuery)\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }, [client, setData, recipeQuery]);\n\n  if (!data.length) {\n    return <Spinner m=\"10\" p=\"4\" color=\"teal\" />;\n  }\n\n  return (\n    <Box>\n      <BrowserRouter>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<RecipeList recipeList={data} />} />\n          <Route path=\"/:recipeSlug\" element={<Recipe recipes={data} />} />\n          <Route path=\"/about\" element={<About />} />\n\n          <Route\n            path=\"*\"\n            element={\n              <main style={{ padding: \"1rem\" }}>\n                <p>There's nothing here!</p>\n              </main>\n            }\n          />\n        </Routes>\n        <Footer />\n      </BrowserRouter>\n    </Box>\n  );\n};\n\nexport default Page;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nexport const theme = extendTheme({\n  colors: {\n    //https://coolors.co/564e58-006d77-83c5be-f0f8fa-f7b32b-ffe0d6-ef767a-c83e4d-120303\n    dgray: \"#564E58\",\n    dteal: \"#006D77\",\n    mteal: \"#83C5BE\",\n    lteal: \"#EDF6F9\",\n    yellow: \"#F7B32B\",\n    lpink: \"#FFE0D6\",\n    mpink: \"#EF767A\",\n    dpink: \"#C83E4D\",\n    black: \"#120303\",\n  },\n  textStyles: {\n    h1_icon: {\n      fontSize: { base: \"0px\", md: \"30px\", lg: \"40px\" },\n      fontWeight: \"bold\",\n      lineHeight: \"110%\",\n      letterSpacing: \"-2%\",\n    },\n    h1: {\n      fontSize: { base: \"14px\", md: \"30px\", lg: \"40px\" },\n      fontWeight: \"bold\",\n      lineHeight: \"110%\",\n      letterSpacing: \"-2%\",\n    },\n    h2: {\n      fontSize: { base: \"10px\", md: \"20px\", lg: \"30px\" },\n      fontWeight: \"semibold\",\n      lineHeight: \"100%\",\n      letterSpacing: \"-1%\",\n      textColor: \"dteal\",\n    },\n    h3: {\n      fontWeight: \"semibold\",\n      lineHeight: \"80%\",\n      textColor: \"mteal\",\n    },\n    body_list: {\n      fontSize: { base: \"8px\", sm: \"8px\", lg: \"14px\" },\n      lineHeight: \"150%\",\n      textColor: \"black\",\n    },\n    body: {\n      fontSize: { base: \"8px\", sm: \"8px\", lg: \"14px\" },\n      textColor: \"black\",\n    },\n  },\n  shadows: {\n    pink: \"3px 3px 0px 1px #FFE0D6\",\n    teal: \"3px 3px 0px 1px #83C5BE\",\n    yellow: \"3px 3px 0px 1px #F7B32B\",\n  },\n  layerStyles: {\n    pinkShadow: {\n      bg: \"transparent\",\n      border: \"2px solid #83C5BE\",\n      boxShadow: \"pink\",\n    },\n    blueShadow: {\n      bg: \"transparent\",\n      border: \"2px solid #006D77\",\n      boxShadow: \"teal\",\n    },\n    linkShadow: {\n      fontWeight: \"bold\",\n      textColor: \"teal\",\n    },\n  },\n  components: {},\n});\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { SanityProvider } from \"./SanityContext\";\nimport Page from \"./Components/Page\";\nimport { theme } from \"./Components/Styling/style\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ChakraProvider theme={theme}>\n        <SanityProvider>\n          <Page />\n        </SanityProvider>\n      </ChakraProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}